{"version":3,"sources":["build/contracts sync /^/.*/.json$","components/NavbarCustom.js","helpers/renderSelectedProtocolForm.js","components/DeployTokenForm.js","components/DeployTokenCard.js","components/Content.js","components/App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","NavbarCustom","Navbar","bg","variant","className","Container","Col","Brand","React","Component","web3","Web3","composeValidators","validators","value","reduce","error","validator","undefined","validateFilledField","name","validateNumber","number","isNaN","validateAccount","account","utils","isAddress","renderError","meta","touched","Form","Text","nameInput","formProps","Group","Label","Control","placeholder","type","autoComplete","input","symbolInput","initialSupplyInput","ownerInput","baseTokenURIInput","renderSelectedProtocolForm","selectedProtocol","component","validate","metamaskWeb3","window","ethereum","deployToken","formValues","a","buildData","require","eth","getAccounts","accounts","contract","Contract","abi","deployArguments","push","deploy","data","bytecode","arguments","contractDeploy","estimateGas","from","getGasPrice","estimateGasPrice","send","gas","gasPrice","contractSend","contractAddress","_address","DeployTokenForm","state","deployedContractAddress","deployError","deploying","onSubmit","setState","console","log","handleSelect","renderDropdown","DropdownButton","title","onSelect","Dropdown","Item","eventKey","renderDeployTokenButton","Button","renderDeployAlert","Alert","message","Spinner","animation","size","renderMetamaskAlert","this","render","handleSubmit","DeployTokenCard","Card","Body","Title","Content","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.25597015.chunk.js","sourcesContent":["var map = {\n\t\"./ERC1155PresetMinterPauser.json\": 578,\n\t\"./ERC20PresetFixedSupply.json\": 579,\n\t\"./ERC20PresetMinterPauser.json\": 580,\n\t\"./ERC721PresetMinterPauserAutoId.json\": 581,\n\t\"./ERC777PresetFixedSupply.json\": 582\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 577;","import React from \"react\";\r\nimport { Navbar, Container, Col } from \"react-bootstrap\";\r\n\r\nclass NavbarCustom extends React.Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" className=\"justify-content-center\">\r\n        <Container>\r\n          <Col>\r\n            <Navbar.Brand>Token Deployer</Navbar.Brand>\r\n          </Col>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarCustom;\r\n","import { Form } from \"react-bootstrap\";\r\nimport { Field } from \"react-final-form\";\r\nimport Web3 from \"web3\";\r\n\r\nconst web3 = new Web3();\r\n\r\nconst composeValidators =\r\n  (...validators) =>\r\n  (value) =>\r\n    validators.reduce(\r\n      (error, validator) => error || validator(value),\r\n      undefined\r\n    );\r\n\r\nconst validateFilledField = (name) => {\r\n  let error = undefined;\r\n  if (!name) {\r\n    error = \"Required\";\r\n  }\r\n\r\n  return error;\r\n};\r\n\r\nconst validateNumber = (number) => {\r\n  let error = undefined;\r\n  if (isNaN(number)) {\r\n    error = \"Invalid value\";\r\n  }\r\n\r\n  return error;\r\n};\r\n\r\nconst validateAccount = (account) => {\r\n  let error = undefined;\r\n  if (!web3.utils.isAddress(account)) {\r\n    error = \"Invalid account address\";\r\n  }\r\n\r\n  return error;\r\n};\r\n\r\n// Render funtion for input errors\r\nconst renderError = (meta) => {\r\n  if (meta.touched && meta.error) {\r\n    return <Form.Text className=\"text-danger\">{meta.error}</Form.Text>;\r\n  }\r\n};\r\n\r\n// Render functions for individual fields\r\nconst nameInput = (formProps) => {\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>Name</Form.Label>\r\n      <Form.Control\r\n        placeholder=\"Token Name\"\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        {...formProps.input}\r\n      />\r\n      <div>{renderError(formProps.meta)}</div>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nconst symbolInput = (formProps) => {\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>Symbol</Form.Label>\r\n      <Form.Control\r\n        placeholder=\"Token Symbol\"\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        {...formProps.input}\r\n      />\r\n      <div>{renderError(formProps.meta)}</div>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nconst initialSupplyInput = (formProps) => {\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>Initial Supply</Form.Label>\r\n      <Form.Control\r\n        placeholder=\"Initial Supply\"\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        {...formProps.input}\r\n      />\r\n      <div>{renderError(formProps.meta)}</div>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nconst ownerInput = (formProps) => {\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>Owner</Form.Label>\r\n      <Form.Control\r\n        placeholder=\"Account Address\"\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        {...formProps.input}\r\n      />\r\n      <div>{renderError(formProps.meta)}</div>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nconst baseTokenURIInput = (formProps) => {\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>Base Token URI</Form.Label>\r\n      <Form.Control\r\n        placeholder=\"Base Token URI\"\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        {...formProps.input}\r\n      />\r\n      <div>{renderError(formProps.meta)}</div>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\n// Render functions for each protocol\r\nconst ERC20PresetFixedSupply = () => {\r\n  return (\r\n    <div>\r\n      <Field\r\n        name=\"tokenName\"\r\n        component={nameInput}\r\n        validate={validateFilledField}\r\n      />\r\n      <Field\r\n        name=\"tokenSymbol\"\r\n        component={symbolInput}\r\n        validate={validateFilledField}\r\n      />\r\n      <Field\r\n        name=\"initialSupply\"\r\n        component={initialSupplyInput}\r\n        validate={composeValidators(validateFilledField, validateNumber)}\r\n      />\r\n      <Field\r\n        name=\"owner\"\r\n        component={ownerInput}\r\n        validate={composeValidators(validateFilledField, validateAccount)}\r\n      />{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ERC20PresetMinterPauser = () => {\r\n  return (\r\n    <div>\r\n      <Field\r\n        name=\"tokenName\"\r\n        component={nameInput}\r\n        validate={validateFilledField}\r\n      />\r\n      <Field\r\n        name=\"tokenSymbol\"\r\n        component={symbolInput}\r\n        validate={validateFilledField}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ERC721PresetMinterPauserAutoId = () => {\r\n  return (\r\n    <div>\r\n      <Field\r\n        name=\"tokenName\"\r\n        component={nameInput}\r\n        validate={validateFilledField}\r\n      />\r\n      <Field\r\n        name=\"tokenSymbol\"\r\n        component={symbolInput}\r\n        validate={validateFilledField}\r\n      />\r\n      <Field\r\n        name=\"baseTokenURI\"\r\n        component={baseTokenURIInput}\r\n        validate={validateFilledField}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// TODO: include defaultOperators input\r\n// const ERC777PresetFixedSupply = () => {\r\n//   return (\r\n//     <div>\r\n//       <Field\r\n//         name=\"tokenName\"\r\n//         component={nameInput}\r\n//         validate={validateFilledField}\r\n//       />\r\n//       <Field\r\n//         name=\"tokenSymbol\"\r\n//         component={symbolInput}\r\n//         validate={validateFilledField}\r\n//       />\r\n//       <Field\r\n//         name=\"initialSupply\"\r\n//         component={initialSupplyInput}\r\n//         validate={composeValidators(validateFilledField, validateNumber)}\r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst ERC1155PresetMinterPauser = () => {\r\n  return (\r\n    <div>\r\n      <Field\r\n        name=\"baseTokenURI\"\r\n        component={baseTokenURIInput}\r\n        validate={validateFilledField}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderSelectedProtocolForm = (selectedProtocol) => {\r\n  switch (selectedProtocol) {\r\n    case \"ERC20PresetFixedSupply\":\r\n      return ERC20PresetFixedSupply();\r\n    case \"ERC20PresetMinterPauser\":\r\n      return ERC20PresetMinterPauser();\r\n    case \"ERC721PresetMinterPauserAutoId\":\r\n      return ERC721PresetMinterPauserAutoId();\r\n    // case \"ERC777PresetFixedSupply\":\r\n    //   return ERC777PresetFixedSupply();\r\n    case \"ERC1155PresetMinterPauser\":\r\n      return ERC1155PresetMinterPauser();\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport default renderSelectedProtocolForm;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Dropdown,\r\n  DropdownButton,\r\n  Alert,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { Form as FinalForm } from \"react-final-form\";\r\nimport Web3 from \"web3\";\r\nimport renderSelectedProtocolForm from \"../helpers/renderSelectedProtocolForm\";\r\n\r\nconst metamaskWeb3 = window.ethereum;\r\nconst web3 = new Web3(metamaskWeb3 ? metamaskWeb3 : null);\r\n\r\nconst deployToken = async (formValues, selectedProtocol) => {\r\n  const buildData = require(`../build/contracts/${selectedProtocol}.json`);\r\n  const accounts = await web3.eth.getAccounts();\r\n  let contract = new web3.eth.Contract(buildData.abi);\r\n\r\n  let deployArguments = [];\r\n  for (let value in formValues) {\r\n    deployArguments.push(formValues[value]);\r\n  }\r\n\r\n  const contractDeploy = await contract.deploy({\r\n    data: buildData.bytecode,\r\n    arguments: deployArguments,\r\n  });\r\n\r\n  const estimateGas = await contractDeploy.estimateGas({\r\n    from: accounts[0],\r\n  });\r\n  const estimateGasPrice = await web3.eth.getGasPrice();\r\n\r\n  const contractSend = await contractDeploy.send({\r\n    from: accounts[0],\r\n    gas: estimateGas,\r\n    gasPrice: estimateGasPrice,\r\n  });\r\n  const contractAddress = contractSend._address;\r\n  return contractAddress;\r\n};\r\n\r\nclass DeployTokenForm extends React.Component {\r\n  state = {\r\n    selectedProtocol: null,\r\n    deployedContractAddress: null,\r\n    deployError: null,\r\n    deploying: false,\r\n  };\r\n\r\n  onSubmit = async (formValues) => {\r\n    this.setState({\r\n      deploying: true,\r\n      deployedContractAddress: null,\r\n      deployError: null,\r\n    });\r\n    try {\r\n      const deployedContractAddress = await deployToken(\r\n        formValues,\r\n        this.state.selectedProtocol\r\n      );\r\n      this.setState({\r\n        deployedContractAddress,\r\n        deployError: null,\r\n        deploying: false,\r\n      });\r\n    } catch (e) {\r\n      console.log(\"ERROR\", e);\r\n      this.setState({\r\n        deployedContractAddress: null,\r\n        deployError: e,\r\n        deploying: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSelect = (selectedProtocol) => {\r\n    this.setState({ selectedProtocol });\r\n  };\r\n\r\n  renderDropdown = () => {\r\n    return (\r\n      <DropdownButton\r\n        className=\"m-3\"\r\n        title={\r\n          this.state.selectedProtocol\r\n            ? this.state.selectedProtocol\r\n            : \"Choose a protocol\"\r\n        }\r\n        onSelect={this.handleSelect}\r\n      >\r\n        <Dropdown.Item eventKey=\"ERC20PresetFixedSupply\">\r\n          ERC20PresetFixedSupply\r\n        </Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"ERC20PresetMinterPauser\">\r\n          ERC20PresetMinterPauser\r\n        </Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"ERC721PresetMinterPauserAutoId\">\r\n          ERC721PresetMinterPauserAutold\r\n        </Dropdown.Item>\r\n        {/* <Dropdown.Item eventKey=\"ERC777PresetFixedSupply\">\r\n          ERC777PresetFixedSupply\r\n        </Dropdown.Item> */}\r\n        <Dropdown.Item eventKey=\"ERC1155PresetMinterPauser\">\r\n          ERC1155PresetMinterPauser\r\n        </Dropdown.Item>\r\n      </DropdownButton>\r\n    );\r\n  };\r\n\r\n  renderDeployTokenButton = () => {\r\n    if (this.state.selectedProtocol) {\r\n      return (\r\n        <Button className=\"m-3\" type=\"submit\">\r\n          Deploy Token\r\n        </Button>\r\n      );\r\n    }\r\n    return;\r\n  };\r\n\r\n  renderDeployAlert = () => {\r\n    if (this.state.deployedContractAddress) {\r\n      return (\r\n        <Alert>\r\n          Deployment complete! <b>{this.state.selectedProtocol}</b> token\r\n          address: {this.state.deployedContractAddress}\r\n        </Alert>\r\n      );\r\n    } else if (this.state.deployError) {\r\n      return (\r\n        <Alert variant=\"danger\">\r\n          Something went wrong - {this.state.deployError.message}\r\n        </Alert>\r\n      );\r\n    } else if (this.state.deploying) {\r\n      return (\r\n        <Alert variant=\"warning\">\r\n          <Spinner animation=\"grow\" size=\"sm\" />\r\n          Deploying...\r\n        </Alert>\r\n      );\r\n    }\r\n  };\r\n\r\n  renderMetamaskAlert = () => {\r\n    if (!metamaskWeb3) {\r\n      return (\r\n        <Alert className=\"m-3\" variant=\"danger\">\r\n          Metamask Required.\r\n        </Alert>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderMetamaskAlert()}\r\n        {this.renderDropdown()}\r\n        <FinalForm\r\n          onSubmit={this.onSubmit}\r\n          render={({ handleSubmit }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              {renderSelectedProtocolForm(this.state.selectedProtocol)}\r\n              {this.renderDeployTokenButton()}\r\n            </Form>\r\n          )}\r\n        />\r\n        {this.renderDeployAlert()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeployTokenForm;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport DeployTokenForm from \"./DeployTokenForm\";\r\n\r\nclass DeployTokenCard extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card className=\"m-3\">\r\n        <Card.Body>\r\n          <Card.Title>Deploy Token</Card.Title>\r\n          <DeployTokenForm />\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeployTokenCard;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport NavbarCustom from \"./NavbarCustom\";\r\nimport DeployTokenCard from \"./DeployTokenCard\";\r\n\r\nclass Content extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"mb-5\">\r\n          <NavbarCustom />\r\n        </div>\r\n        <Container>\r\n          <DeployTokenCard />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Content from \"./Content\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Content />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}